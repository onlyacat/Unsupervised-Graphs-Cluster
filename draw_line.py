import random

import numpy as np
from torch_geometric.utils import to_networkx
import networkx as nx
import matplotlib.pyplot as plt
from read_dataset import Dataset


X = np.linspace(0,198,199,endpoint=True)

# plt.figure(figsize=(10.24,4.8))

test = 51.52

nmi = 0.1408

ari = 0.0982

sil = 0.4216

cal = 3357.2141

loss_list=[16.3468, 15.9999, 15.9951, 15.7788, 15.8732, 15.4059, 9.1181, 8.2193, 8.4011, 7.9105, 8.0092, 7.9313, 7.7135, 7.8341, 7.6183, 7.6602, 7.5955, 7.4649, 7.1514, 6.9651, 6.9641, 6.7455, 6.7966, 6.6718, 6.6485, 7.0266, 6.4528, 6.2979, 6.3662, 6.4688, 6.1129, 5.7544, 5.6334, 5.8937, 5.5788, 5.8962, 5.6262, 5.5996, 5.5806, 5.048, 5.0548, 4.9955, 4.8784, 5.1218, 5.2912, 4.9103, 4.8952, 5.0469, 5.0931, 5.1689, 6.1907, 5.2061, 4.9066, 5.0585, 5.0856, 4.7952, 4.8404, 4.6591, 5.1199, 5.0324, 5.684, 4.6772, 4.7253, 4.9146, 4.9558, 4.8359, 4.7795, 4.7875, 4.7418, 5.0213, 4.7718, 5.0481, 4.8126, 4.6905, 4.9658, 4.5154, 4.642, 4.6576, 4.796, 4.5952, 4.509, 4.7876, 4.8559, 4.6782, 4.7544, 4.8163, 4.5291, 4.6447, 4.6379, 4.5709, 4.6019, 4.5047, 4.403, 4.4796, 4.5044, 4.5072, 4.5767, 4.3211, 4.5448, 4.4716, 4.4208, 4.2993, 4.5098, 4.3317, 4.3219, 4.7154, 4.7593, 4.0855, 4.4075, 4.4041, 4.3471, 4.0278, 4.2577, 3.7716, 3.8015, 4.1242, 3.8779, 3.7794, 4.033, 3.7948, 4.2527, 3.8606, 3.6522, 3.8347, 3.8888, 4.0895, 3.8968, 4.1145, 4.1173, 3.8028, 4.452, 3.9319, 4.0995, 3.5091, 3.9623, 3.7615, 3.5976, 3.5534, 3.2778, 3.3937, 3.2257, 3.6261, 3.1414, 3.4376, 3.2882, 3.194, 3.2525, 3.3323, 3.2716, 3.3388, 3.1307, 3.3884, 3.0663, 3.2325, 3.1716, 3.1989, 3.0793, 2.9678, 3.3767, 3.1064, 3.0137, 3.4693, 2.9742, 2.9739, 3.2558, 3.1281, 3.1, 2.976, 2.9696, 3.0451, 3.186, 3.0805, 2.9632, 2.898, 3.1122, 2.9074, 3.0791, 2.7823, 2.9513, 2.8008, 3.1284, 2.8477, 2.7809, 2.8115, 2.868, 2.909, 2.9567, 2.7485, 2.8641, 2.8192, 2.8066, 3.0797, 3.0242, 2.9127, 2.8439, 2.7878, 2.7045, 2.8968, 2.7983]

validate_list=[0.5, 0.5, 0.54, 0.53, 0.56, 0.67, 0.92, 0.88, 0.94, 0.94, 0.87, 0.93, 0.92, 0.92, 0.93, 0.92, 0.91, 0.95, 0.96, 0.95, 0.94, 0.96, 0.95, 0.96, 0.96, 0.95, 0.94, 0.96, 0.97, 0.97, 0.96, 0.99, 0.96, 0.99, 0.99, 0.99, 0.97, 0.97, 0.99, 0.99, 0.99, 0.98, 0.99, 0.99, 0.97, 0.99, 0.99, 0.99, 0.99, 0.99, 0.95, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.97, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.98, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.98, 0.98, 0.98, 0.98, 0.98, 0.98, 0.98, 0.98, 0.98, 0.98, 0.98, 0.99, 0.98, 0.98, 0.98, 0.99, 0.98, 0.98, 0.98, 0.98, 0.99, 0.98, 0.98, 0.99, 0.98, 0.98, 0.98, 0.99, 0.99, 0.98, 1.0, 0.98, 0.99, 0.98, 0.98, 1.0, 0.98, 0.98, 0.98, 0.99, 0.99, 0.98, 1.0, 0.98, 1.0, 0.99, 0.98, 0.98, 1.0, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 1.0, 0.99, 0.99, 0.99, 0.99, 1.0, 0.99, 0.99, 0.99, 0.99, 0.99, 1.0, 0.99, 0.99, 0.99, 1.0, 1.0, 0.99, 0.99, 0.99, 1.0, 1.0, 0.99, 1.0, 0.99, 1.0, 0.99, 1.0, 0.99, 1.0, 1.0, 0.99, 0.99, 0.99, 0.99, 1.0, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99]

test_list=[0.5018, 0.501, 0.5008, 0.4956, 0.4954, 0.4896, 0.4838, 0.4844, 0.4858, 0.5594, 0.5438, 0.5766, 0.5862, 0.586, 0.5788, 0.579, 0.5766, 0.5782, 0.5766, 0.5744, 0.5754, 0.5736, 0.5748, 0.5746, 0.5782, 0.5736, 0.572, 0.5804, 0.5838, 0.5628, 0.563, 0.582, 0.5658, 0.5786, 0.5676, 0.5706, 0.58, 0.5684, 0.5666, 0.5676, 0.5736, 0.5698, 0.5684, 0.5782, 0.5674, 0.576, 0.5644, 0.5708, 0.5812, 0.5708, 0.5756, 0.5682, 0.574, 0.577, 0.5646, 0.5626, 0.5648, 0.5636, 0.5692, 0.5708, 0.5736, 0.5606, 0.557, 0.5608, 0.5696, 0.566, 0.5666, 0.5686, 0.5696, 0.571, 0.5584, 0.5584, 0.5584, 0.5656, 0.5644, 0.5676, 0.569, 0.5686, 0.5686, 0.5682, 0.5568, 0.5608, 0.5506, 0.5666, 0.553, 0.558, 0.5698, 0.5682, 0.5672, 0.5712, 0.5856, 0.5458, 0.544, 0.5554, 0.558, 0.5706, 0.5376, 0.5484, 0.5494, 0.5634, 0.5714, 0.5266, 0.584, 0.5294, 0.5834, 0.5208, 0.5206, 0.5124, 0.5758, 0.5812, 0.5096, 0.5048, 0.5878, 0.497, 0.4948, 0.5878, 0.493, 0.492, 0.582, 0.4916, 0.497, 0.592, 0.5946, 0.4918, 0.4882, 0.5938, 0.603, 0.4994, 0.4916, 0.5974, 0.601, 0.4924, 0.5108, 0.6018, 0.4962, 0.4976, 0.5146, 0.5134, 0.5134, 0.5106, 0.5136, 0.5978, 0.6018, 0.4892, 0.5116, 0.517, 0.6036, 0.607, 0.491, 0.5098, 0.6058, 0.5144, 0.4954, 0.5152, 0.6016, 0.5156, 0.496, 0.515, 0.6112, 0.5178, 0.5128, 0.6136, 0.6118, 0.5228, 0.527, 0.6136, 0.5272, 0.5134, 0.6096, 0.6132, 0.5248, 0.5286, 0.615, 0.609, 0.6132, 0.6106, 0.609, 0.6088, 0.6152, 0.5288, 0.5292, 0.6142, 0.6094, 0.6088, 0.6092, 0.6112, 0.611, 0.6118, 0.6086, 0.6144, 0.6108, 0.6124, 0.6096, 0.6112, 0.615, 0.6106, 0.6164, 0.5196, 0.6174]

nmi_list=[0.0877, 0.0873, 0.0867, 0.0842, 0.0865, 0.081, 0.074, 0.076, 0.0763, 0.1401, 0.149, 0.1928, 0.1961, 0.199, 0.1943, 0.1947, 0.1932, 0.1947, 0.1942, 0.1941, 0.1956, 0.1937, 0.1951, 0.1946, 0.1941, 0.1944, 0.1926, 0.1958, 0.1994, 0.1907, 0.1894, 0.1962, 0.1905, 0.1941, 0.1907, 0.191, 0.1945, 0.1921, 0.1888, 0.1889, 0.1907, 0.1895, 0.1888, 0.1928, 0.1883, 0.1905, 0.1877, 0.189, 0.1943, 0.1864, 0.1903, 0.1844, 0.1895, 0.1941, 0.1826, 0.1813, 0.1835, 0.1836, 0.188, 0.1896, 0.1916, 0.1807, 0.1783, 0.1816, 0.1876, 0.1875, 0.1885, 0.1916, 0.1921, 0.1926, 0.1803, 0.1785, 0.1815, 0.186, 0.1898, 0.1922, 0.1933, 0.1915, 0.192, 0.1924, 0.1895, 0.1898, 0.185, 0.1896, 0.1863, 0.1876, 0.1923, 0.1916, 0.1925, 0.191, 0.1938, 0.1808, 0.1809, 0.1866, 0.19, 0.1929, 0.1846, 0.1862, 0.1862, 0.1904, 0.1935, 0.183, 0.1914, 0.1783, 0.191, 0.1828, 0.1824, 0.1804, 0.187, 0.1896, 0.1797, 0.1781, 0.1888, 0.1787, 0.1786, 0.187, 0.1777, 0.1766, 0.1884, 0.1778, 0.1762, 0.1901, 0.1905, 0.1774, 0.1771, 0.1903, 0.1926, 0.1766, 0.1767, 0.1896, 0.1907, 0.1764, 0.1729, 0.1906, 0.1756, 0.176, 0.1732, 0.1733, 0.1723, 0.1725, 0.1715, 0.1889, 0.1902, 0.1741, 0.1711, 0.1707, 0.1903, 0.1884, 0.1722, 0.1692, 0.1923, 0.1675, 0.1722, 0.1679, 0.189, 0.1666, 0.1705, 0.1659, 0.1908, 0.1659, 0.1657, 0.1885, 0.1902, 0.1652, 0.1646, 0.1881, 0.1639, 0.1649, 0.1915, 0.1882, 0.1641, 0.1636, 0.1898, 0.1892, 0.1869, 0.1904, 0.19, 0.1902, 0.1866, 0.1644, 0.1629, 0.1861, 0.1923, 0.1891, 0.1901, 0.1895, 0.1929, 0.1885, 0.1918, 0.1881, 0.1924, 0.1873, 0.1917, 0.1896, 0.1849, 0.1887, 0.1819, 0.1647, 0.1863]

adjusted_rand_score_list=[0.0676, 0.0671, 0.0667, 0.0636, 0.0644, 0.061, 0.0585, 0.0587, 0.0594, 0.1137, 0.1307, 0.1617, 0.1643, 0.1655, 0.1624, 0.1625, 0.1616, 0.1617, 0.1615, 0.1617, 0.1624, 0.1612, 0.1612, 0.1611, 0.1608, 0.1607, 0.1598, 0.161, 0.1624, 0.1574, 0.1567, 0.1615, 0.1577, 0.1592, 0.1578, 0.1565, 0.1586, 0.1587, 0.1542, 0.1543, 0.1558, 0.1547, 0.1545, 0.1579, 0.1539, 0.1564, 0.1535, 0.155, 0.156, 0.151, 0.1517, 0.1475, 0.1503, 0.1517, 0.1452, 0.1456, 0.1451, 0.1443, 0.1472, 0.1479, 0.1492, 0.1439, 0.1439, 0.1442, 0.1475, 0.1453, 0.1446, 0.1458, 0.1464, 0.1472, 0.1414, 0.1431, 0.1413, 0.144, 0.1428, 0.1448, 0.1454, 0.145, 0.1451, 0.1449, 0.1381, 0.1403, 0.1344, 0.1436, 0.1357, 0.1384, 0.1457, 0.1446, 0.1439, 0.1463, 0.1562, 0.1322, 0.1315, 0.1365, 0.1385, 0.1459, 0.1291, 0.1337, 0.1339, 0.1414, 0.1463, 0.1256, 0.1547, 0.1249, 0.1542, 0.1244, 0.1242, 0.122, 0.1481, 0.1524, 0.1214, 0.1203, 0.1568, 0.1198, 0.12, 0.1565, 0.1194, 0.1194, 0.1512, 0.1196, 0.1197, 0.1586, 0.1608, 0.1199, 0.1192, 0.1597, 0.1663, 0.1198, 0.119, 0.1618, 0.1638, 0.1189, 0.1177, 0.1645, 0.119, 0.1205, 0.1182, 0.1184, 0.118, 0.1179, 0.118, 0.1622, 0.1645, 0.1184, 0.1173, 0.117, 0.166, 0.1668, 0.1182, 0.1171, 0.1694, 0.1155, 0.1187, 0.1153, 0.1646, 0.1151, 0.1174, 0.1154, 0.1715, 0.1152, 0.1161, 0.1713, 0.1714, 0.1165, 0.1174, 0.1714, 0.1168, 0.1157, 0.172, 0.1714, 0.1161, 0.1171, 0.1732, 0.1702, 0.1701, 0.1718, 0.1703, 0.1699, 0.171, 0.1175, 0.1164, 0.1702, 0.1725, 0.17, 0.1708, 0.1713, 0.174, 0.1715, 0.1732, 0.1719, 0.1742, 0.1704, 0.1723, 0.1723, 0.1697, 0.1703, 0.1681, 0.1153, 0.1723]

sil_list=[0.4665, 0.4705, 0.4713, 0.4695, 0.4723, 0.4676, 0.4653, 0.463, 0.4755, 0.4726, 0.472, 0.4772, 0.4674, 0.4715, 0.4741, 0.4724, 0.4794, 0.4806, 0.4656, 0.4853, 0.4782, 0.4833, 0.4734, 0.4847, 0.468, 0.4847, 0.4807, 0.4703, 0.4678, 0.4801, 0.4858, 0.4866, 0.4776, 0.4806, 0.472, 0.4891, 0.4873, 0.4724, 0.4906, 0.4848, 0.4798, 0.4934, 0.4907, 0.4839, 0.4905, 0.4866, 0.4947, 0.4836, 0.4955, 0.4929, 0.4873, 0.4874, 0.4935, 0.4926, 0.4916, 0.492, 0.4992, 0.4948, 0.4964, 0.4946, 0.5053, 0.4931, 0.5005, 0.4976, 0.4916, 0.5051, 0.4929, 0.4982, 0.4875, 0.5108, 0.4868, 0.4894, 0.5028, 0.4848, 0.5027, 0.4967, 0.5053, 0.5017, 0.4838, 0.4947, 0.4875, 0.5046, 0.4977, 0.4969, 0.5024, 0.5005, 0.4917, 0.4841, 0.483, 0.4739, 0.4823, 0.4717, 0.4688, 0.4611, 0.4658, 0.4606, 0.4518, 0.4627, 0.4568, 0.4588, 0.4655, 0.4567, 0.452, 0.4578, 0.4512, 0.457, 0.4658, 0.4582, 0.4585, 0.4572, 0.4593, 0.4602, 0.4656, 0.4521, 0.4713, 0.468, 0.4543, 0.4633, 0.4707, 0.4628, 0.4623, 0.4616, 0.4619, 0.475, 0.4641, 0.463, 0.4652, 0.4549, 0.4613, 0.4622, 0.4742, 0.4614, 0.4588, 0.4654, 0.4584, 0.4604, 0.4613, 0.4624, 0.4533, 0.471, 0.4569, 0.4656, 0.4646, 0.4701, 0.4598, 0.4606, 0.4753, 0.4704, 0.4479, 0.4634, 0.4673, 0.4695, 0.4672, 0.4669, 0.4601, 0.4583, 0.4751, 0.4649, 0.4702, 0.4745, 0.4733, 0.454, 0.46, 0.4609, 0.4716, 0.4699, 0.4744, 0.4465, 0.4515, 0.4786, 0.4765, 0.4927, 0.4915, 0.491, 0.5014, 0.512, 0.51, 0.5133, 0.5192, 0.5217, 0.5312, 0.5405, 0.5431, 0.5474, 0.5496, 0.5514, 0.5549, 0.5572, 0.5563, 0.5622, 0.5624, 0.561, 0.561, 0.5322, 0.5432, 0.5472, 0.5422, 0.5522, 0.5525]

cal_list=[8757.9458, 8987.6051, 8961.3514, 8876.4532, 9068.2341, 8749.2271, 8663.3306, 8594.2333, 9281.1063, 9002.2777, 8960.962, 9260.39, 8751.2017, 9014.9611, 9106.8811, 9004.9626, 9382.4189, 9494.1539, 8647.4755, 9762.2285, 9360.5279, 9682.2036, 9191.3893, 9789.6192, 8951.3234, 9867.3792, 9692.1069, 9167.868, 9126.596, 9762.7445, 10019.463, 10107.0611, 9689.1878, 9869.1902, 9461.6968, 10298.6732, 10231.9495, 9537.9746, 10352.8228, 10135.2911, 9919.8329, 10495.7527, 10347.7528, 10086.3519, 10343.7027, 10178.8912, 10531.0008, 10028.8928, 10550.8913, 10448.0928, 10219.3201, 10197.3402, 10443.0805, 10437.2636, 10362.7528, 10412.2165, 10699.8189, 10490.3372, 10529.1408, 10496.3696, 10931.6134, 10319.0788, 10699.841, 10564.9452, 10269.5435, 10828.5932, 10320.4456, 10533.5952, 10064.2091, 11105.062, 9976.5225, 10163.0235, 10762.5434, 9925.6832, 10736.1934, 10474.2722, 10822.2182, 10685.3792, 9827.4727, 10391.324, 10035.3494, 10748.8315, 10523.7982, 10488.808, 10720.617, 10627.6779, 10239.2474, 9958.993, 9884.4717, 9402.2135, 9863.011, 9373.1696, 9258.8041, 8862.8848, 9180.5711, 8951.7009, 8544.0385, 9082.0872, 8800.0458, 8804.6904, 9191.2557, 8825.9694, 8532.5557, 8846.3298, 8491.1903, 8764.2971, 9109.1092, 8773.6431, 8761.6605, 8762.8874, 8836.032, 8872.7395, 9134.1175, 8508.898, 9321.3858, 9233.059, 8591.5909, 8996.3681, 9295.0084, 8946.1817, 8910.6629, 8930.9431, 8895.274, 9379.3278, 8995.6758, 8957.187, 8992.1097, 8611.504, 8880.5581, 8923.0737, 9466.8488, 8796.8462, 8793.4715, 8983.422, 8776.0085, 8768.8432, 8868.3167, 8909.5063, 8471.803, 9093.5302, 8515.469, 9053.5459, 8999.4999, 9096.4162, 8653.2425, 8722.6876, 9348.8127, 9191.9988, 8278.5999, 8838.9723, 9100.4709, 9139.1936, 9134.0178, 9082.0533, 8484.5207, 8603.0878, 9348.4261, 8896.0516, 9181.8185, 9346.5196, 9082.3894, 8252.051, 8537.7656, 8627.2073, 9168.7851, 8954.7846, 8966.5675, 8038.8482, 7911.4706, 8783.5984, 8828.5917, 9213.9411, 9102.8695, 9080.5831, 9492.0924, 9864.9792, 9763.2186, 9894.3528, 10023.8795, 10103.559, 10301.895, 10303.3222, 10321.952, 10443.9586, 10479.7734, 10511.3006, 10579.0936, 10644.5004, 10607.8547, 10741.3597, 10757.7282, 10729.6763, 10775.3875, 10080.8315, 10240.3294, 10301.9419, 10183.2766, 10329.8342, 10329.6422]

# a1 = plt.subplot(1, 2, 1)
# a1.plot(X, validate_list, color="blue", linewidth=2.5, linestyle="-", label="Loss value")
plt.plot(X, loss_list, color="blue", linewidth=1, linestyle="-")
plt.xticks(np.arange(0, 201, 40))
# a1.legend(loc='upper right')
plt.xlabel("Epoches")
plt.ylabel("Loss value")

plt.show()

plt.plot(X, [x*100 for x in validate_list], color="blue", linewidth=1, linestyle="-")
plt.xticks(np.arange(0, 200, 40))
# a1.legend(loc='upper right')
plt.xlabel("Epoches")
plt.ylabel("Validation Accuracy")

plt.show()

# plt.plot(X, [x*100 for x in test_list], color="blue", linewidth=1, linestyle="-",label="This approach")
# plt.xticks(np.arange(0, 200, 40))
# plt.plot(X,[test]*199,color="green",linewidth=1,linestyle="-",label="Baseline")
# plt.legend(loc='upper left')
# plt.xlabel("Epoches")
# plt.ylabel("Accuracy")
#
# plt.show()

# plt.plot(X, adjusted_rand_score_list, color="blue", linewidth=1, linestyle="-",label="This approach")
# plt.xticks(np.arange(0, 200, 40))
# plt.plot(X,[ari]*199,color="green",linewidth=1,linestyle="-",label="Baseline")
# plt.legend(loc='upper left')
# plt.xlabel("Epoches")
# plt.ylabel("ARI")
#
# plt.show()

# plt.plot(X, nmi_list, color="blue", linewidth=1, linestyle="-",label="This approach")
# plt.xticks(np.arange(0, 200, 40))
# plt.plot(X,[nmi]*199,color="green",linewidth=1,linestyle="-",label="Baseline")
# plt.legend(loc='upper left')
# plt.xlabel("Epoches")
# plt.ylabel("NMI")
#
# plt.show()

plt.plot(X, sil_list, color="blue", linewidth=1, linestyle="-",label="This approach")
plt.xticks(np.arange(0, 200, 40))
plt.plot(X,[sil]*199,color="green",linewidth=1,linestyle="-",label="Baseline")
plt.legend(loc='upper left')
plt.xlabel("Epoches")
plt.ylabel("Silhouette Score")

plt.show()

plt.plot(X, cal_list, color="blue", linewidth=1, linestyle="-",label="This approach")
plt.xticks(np.arange(0, 200, 40))
plt.plot(X,[cal]*199,color="green",linewidth=1,linestyle="-",label="Baseline")
plt.legend(loc='upper left')
plt.xlabel("Epoches")
plt.ylabel("Calinski-Harabaz Score")

plt.show()